version: "3.7"

services:
  webapp:
    build: ./backend
    volumes:
      - ./backend/webapp:/code/
    stdin_open: true
    tty: true
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    networks:
      - backendNetwork
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: "3306"
      DEBUG: ${DEBUG}
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
      AWS_STORAGE_BUCKET_NAME: ""
      MYAPP_DOMAIN: ""
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING}
    depends_on:
      - testdb

  testdb:
    build: ./db
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: 'Asia/Tokyo'
    volumes:
      - ./mariadb_volume:/var/lib/mysql
    networks:
      - backendNetwork
      

  frontend:
    build: ./frontend
    volumes:
      - ./frontend/frontend:/home/app/frontend/
    tty: true
    ports:
      - 3000:3000
    environment:
      NEXT_PUBLIC_URL: ${NEXT_PUBLIC_URL}
      INTERNAL_URL: ${INTERNAL_URL}
      NEXT_PUBLIC_S3_STATIC_URL: ${NEXT_PUBLIC_S3_STATIC_URL}
      NEXT_PUBLIC_S3_LEARN_URL: ${NEXT_PUBLIC_S3_LEARN_URL}
    networks:
      - backendNetwork
    depends_on:
      - testdb

networks:
  backendNetwork:
    driver: bridge
